// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture

struct SquareStruct{
    int squareType;
    float4 cornerValues;
};

RWStructuredBuffer<SquareStruct> squareBuffer;
float threshold;

[numthreads(10,1,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    SquareStruct square = squareBuffer[id.x];
    square.squareType = 
        (square.cornerValues[0] >= threshold)*pow(2,0) 
        + (square.cornerValues[1] >= threshold)*pow(2,1) 
        + (square.cornerValues[2] >= threshold)*pow(2,2) 
        + (square.cornerValues[3] >= threshold)*pow(2,3);
    squareBuffer[id.x] = square;
}
